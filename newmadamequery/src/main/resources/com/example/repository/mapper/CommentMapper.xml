<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.repository.mapper.CommentMapper">
	<cache />

	<sql id="BaseColumns">
		comment_id,
		created_date AS createdDate,
		modified_date AS modifiedDate,
		content,
		post_id AS postId,
		group_id AS groupId,
		name AS member_name,
		c.member_id AS member_id
	</sql>
	
	<resultMap id="collectionResultMap" type="StudyGroup">
		<id column="group_id" jdbcType="NUMERIC" property="groupId" />
		<result column="created_date" jdbcType="DATE" property="createdDate"/>
		<result column="number_of_member" jdbcType="NUMERIC" property="numberOfUsers" />
		<result column="name" jdbcType="VARCHAR" property="groupName" />
		<result column="description" jdbcType="VARCHAR" property="description" />
		<result column="term" jdbcType="NUMERIC" property="term" />
		<result column="meeting_type" jdbcType="VARCHAR" property="meetingType" />
		<result column="gender_type" jdbcType="CHAR" property="genderType" />
		<result column="grade_type" jdbcType="VARCHAR" property="gradeType" />
		<result column="subject_id" jdbcType="NUMERIC" property="subjectId" />
		<result column="leader_id" jdbcType="NUMERIC" property="leaderId" />
		<collection property="groupUsers" ofType="User">
			<id property="member_id" column="member_id" />
			<result property="gender" column="gender" />
		</collection>	
	</resultMap>
	
	<select id="selectAllStudyGroup" resultMap="collectionResultMap">
		SELECT *
		FROM STUDYGROUP sg, GROUPMEMBER gm
		WHERE sg.group_id = gm.group_id
	</select>
	
	<!-- getOneComment, existingComment -->
	<select id="selectCommentByPrimaryKey" parameterType="int" 
		resultType="Comment">
		SELECT <include refid="BaseColumns"/>
		FROM COMMT c, MEMBER m
		WHERE comment_id = #{comment_id} and c.member_id = m.member_id
	</select>
	
	<!-- getCommentList -->
	<select id="selectAllComment" parameterType="int" resultType="Comment">
	
		SELECT <include refid="BaseColumns" />
		FROM COMMT c, MEMBER m
		WHERE c.post_id = #{postId} and c.member_id = m.member_id
	</select>
 
 	<!-- getCommentCount -->
 	<select id="selectCommentCount" parameterType="int"
 		resultType="int">
 		SELECT count(*) as count
 		FROM COMMT
 		WHERE post_id = #{postId}
 	</select>
 
 	<!-- createComment -->
	<insert id="insertComment" parameterType="Comment">
		<selectKey keyProperty="comment_id" resultType="int" order="BEFORE">
			SELECT sequence_comment.nextval AS comment_id FROM DUAL
		</selectKey>
		INSERT INTO COMMT (comment_id, created_Date, content, post_id, group_id, member_id)
		VALUES (#{comment_id}, SYSDATE, #{content}, #{postId}, #{groupId}, #{member_id})
	</insert>
 
 	<!-- updateComment -->
	 <update id="updateComment" parameterType="Comment">
		UPDATE COMMT 
		SET content = #{content}
		WHERE comment_id = #{comment_id}
	</update>
 
 	<!-- deleteComment -->
	<delete id="deleteComment" parameterType="int">
		DELETE FROM COMMT
		WHERE comment_id = #{id}
	</delete>
	
	<!-- removeAllComment -->
	<delete id="deleteAllComments" parameterType="int">
		DELETE FROM COMMT
		WHERE post_id = #{postId}
	</delete>
	

</mapper>